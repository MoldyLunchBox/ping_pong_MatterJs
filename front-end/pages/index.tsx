import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import React, { useEffect } from "react";
import io, {Socket} from "socket.io-client"
import engine from "../modules/Engine";
import Matter, {  Events,  Engine, World, Bodies } from "matter-js";
const { log } = console;

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  useEffect(() => {
    var Engine = Matter.Engine,
    Render = Matter.Render,
    Runner = Matter.Runner,
    Bodies = Matter.Bodies,
    Body = Matter.Body,

    Composite = Matter.Composite,
    Mouse = Matter.Mouse,
    MouseConstraint = Matter.MouseConstraint;

    var engine = Engine.create();
    engine.gravity = {    
      x: 0,
      y: 0,
      scale: 0
  };
    var render = Render.create({
      element: document.body,
      engine: engine,
      options:{
        background: "transparent",
        wireframes: false,
        width: 1000,
        height: 600,
      }
  });

  // create two boxes and a ground
  const socket = io('http://localhost:3008');
socket.on('ballPosition', (data) => {
  // Update the ball's position
  console.log("game", data)
  ball.position.x = data.x;
  ball.position.y = data.y;
});

var ball = Bodies.circle(400, 200, 20);
  
var boxB = Bodies.rectangle(20, 300, 40, 200,{inertia: Infinity});
var ground = Bodies.rectangle(500, 0, 1000, 20, {  isStatic: true,
  render: {
    fillStyle: 'blue'
  }});
var roof = Bodies.rectangle(500, 600, 1000, 20, {   isStatic: true,
  render: {
    fillStyle: 'red'
  }});
  var wall = Bodies.rectangle(900, 300, 20, 1000, {  isStatic: true,
    render: {
      fillStyle: 'green'
    }});
    var wallLeft = Bodies.rectangle(0, 300, 20, 1000, {  isStatic: true,
      render: {
        fillStyle: 'green'
      }});
    Body.setVelocity(ball, { x: 5, y: 5 });
// add all of the bodies to the world
Composite.add(engine.world, [ball, boxB, ground, roof, wall, wallLeft ]);

// run the renderer
Render.run(render);

// create runner
var runner = Runner.create();
log(render)
// run the engine
Runner.run(runner, engine);
let mouse = Mouse.create(render.canvas)
let mouseConstraint = MouseConstraint.create(engine,{
  mouse: mouse,
  constraint:{
    stiffness: 0.2,
    render:{
      visible: false
    }
  }
})
Events.on(mouseConstraint, "mousemove", (e)=>{
  boxB.position.y =  e.mouse.position.y
  boxB.position.x=40
})

Events.on(mouseConstraint, "mouseup", (e)=>{
  Body.setVelocity(ball, { x: 5, y: 5 });

})
Composite.add(engine.world, [mouseConstraint]);

  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <main>

        </main>
    </>
  )
}
