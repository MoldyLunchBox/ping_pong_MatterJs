"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/matterTools.ts":
/*!******************************!*\
  !*** ./utils/matterTools.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"matterJsModules\": function() { return /* binding */ matterJsModules; }\n/* harmony export */ });\n/* harmony import */ var matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! matter-js */ \"./node_modules/matter-js/build/matter.js\");\n/* harmony import */ var matter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(matter_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n\n\n// function saveMeasurements(div: HTMLElement, obj: measurements){\n//     obj = {\n//         divHeight: div.clientHeight,\n//         divWidth: div.clientWidth,\n//         wallBottom: {x: div.clientWidth / 2, y : div.clientHeight, width: div.clientWidth, height: 20},\n//         wallTop: {x: div.clientWidth / 2, y : 0, width: div.clientWidth, height: 20},\n//         wallLeft: {x: 0, y : div.clientHeight / 2, width: 20, height: div.clientHeight},\n//         wallRight: {x: div.clientWidth , y : div.clientHeight / 2, width: 20, height: div.clientHeight},\n//     }\n// }\nclass matterJsModules {\n    saveMeasurements(div) {\n        console.log(div.clientHeight);\n        const obj = {\n            divHeight: div.clientHeight,\n            divWidth: div.clientWidth,\n            wallBottom: {\n                x: div.clientWidth / 2,\n                y: div.clientHeight,\n                width: div.clientWidth,\n                height: 20\n            },\n            wallTop: {\n                x: div.clientWidth / 2,\n                y: 0,\n                width: div.clientWidth,\n                height: 20\n            },\n            wallLeft: {\n                x: 0,\n                y: div.clientHeight / 2,\n                width: 20,\n                height: div.clientHeight\n            },\n            wallRight: {\n                x: div.clientWidth,\n                y: div.clientHeight / 2,\n                width: 20,\n                height: div.clientHeight\n            },\n            leftPaddle: {\n                x: 50,\n                y: div.clientHeight / 2,\n                width: 40,\n                height: 200\n            },\n            rightPaddle: {\n                x: div.clientWidth - 50,\n                y: div.clientHeight / 2,\n                width: 40,\n                height: 200\n            }\n        };\n        return obj;\n    }\n    createModules() {\n        if (this.matterContainer) {\n            this.objects.engine = this.modules.Engine.create();\n            this.objects.render = this.modules.Render.create({\n                element: this.matterContainer,\n                engine: this.objects.engine,\n                options: {\n                    background: \"transparent\",\n                    wireframes: false,\n                    showAngleIndicator: false,\n                    width: this.matterContainer.clientWidth,\n                    height: this.matterContainer.clientHeight\n                }\n            }), this.objects.runner = this.modules.Runner.create(), this.objects.mouse = this.modules.Mouse.create(this.objects.render.canvas), this.objects.mouseConstraint = this.modules.MouseConstraint.create(this.objects.engine, {\n                mouse: this.objects.mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        visible: false\n                    }\n                }\n            });\n        }\n    }\n    // createModules() {\n    //     this.objects.engine = this.modules.Engine.create(),\n    //         this.objects.render = this.modules.Render.create({\n    //             element: document.body,\n    //             engine: this.objects.engine,\n    //             options: {\n    //                 background: \"transparent\",\n    //                 wireframes: false,\n    //                 width: 1000,\n    //                 height: 600,\n    //             }\n    //         }),\n    //         this.objects.runner = this.modules.Runner.create(),\n    //         this.objects.mouse = this.modules.Mouse.create(this.objects.render.canvas),\n    //         this.objects.mouseConstraint = this.modules.MouseConstraint.create(this.objects.engine, {\n    //             mouse: this.objects.mouse,\n    //             constraint: {\n    //                 stiffness: 0.2,\n    //                 render: {\n    //                     visible: false\n    //                 }\n    //             }\n    //         })\n    // }\n    createBodies() {\n        this.modules.Composite.add(this.objects.engine.world, [\n            this.bodies.ball,\n            this.test,\n            this.bodies.leftPaddle,\n            this.bodies.ground,\n            this.bodies.roof,\n            this.bodies.wall,\n            this.bodies.wallLeft,\n            this.bodies.rightPaddle\n        ]);\n    }\n    events() {\n        matter_js__WEBPACK_IMPORTED_MODULE_0__.Events.on(this.objects.mouseConstraint, \"mousemove\", (e)=>{\n            var _this_socket;\n            this.modules.Body.setPosition(this.bodies.myPaddle, {\n                x: this.bodies.myPaddle.position.x,\n                y: e.mouse.position.y\n            });\n            console.log(this.bodies.myPaddle.position);\n            (_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.emit(this.paddleSide, {\n                x: this.bodies.myPaddle.position.x,\n                y: e.mouse.position.y\n            });\n        });\n        matter_js__WEBPACK_IMPORTED_MODULE_0__.Events.on(this.objects.mouseConstraint, \"mouseup\", (e)=>{\n            var // this.modules.Body.setVelocity(this.bodies.ball, { x: 5, y: 5 });\n            _this_socket;\n            (_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.emit(\"mouseUp\", {\n                x: this.bodies.myPaddle.position.x,\n                y: e.mouse.position.y\n            });\n        });\n    }\n    run() {\n        this.modules.Composite.add(this.objects.engine.world, [\n            this.objects.mouseConstraint\n        ]);\n        this.modules.Render.run(this.objects.render);\n        this.modules.Runner.run(this.objects.runner, this.objects.engine);\n    }\n    socketStuff() {\n        this.socket.on(\"ballPosition\", (data)=>{\n            // Update the ball's position\n            this.bodies.ball.position.x = this.obj.divWidth * data.x / 1000;\n            this.bodies.ball.position.y = this.obj.divHeight * data.y / 1000;\n        // console.log(this.bodies.ball.position.x, this.bodies.ball.position.y)\n        });\n    }\n    updateOtherPaddle() {\n        if (this.paddleSide.length > 1) {\n            // Update the other's paddle position\n            if (this.paddleSide == \"left\") this.socket.on(\"right\", (data)=>{\n                this.modules.Body.setPosition(this.bodies.othersPaddle, {\n                    x: this.obj.divWidth * data.x / 1000,\n                    y: this.obj.divHeight * data.y / 1000\n                });\n            });\n            else this.socket.on(\"left\", (data)=>{\n                this.modules.Body.setPosition(this.bodies.othersPaddle, {\n                    x: this.obj.divWidth * data.x / 1000,\n                    y: this.obj.divHeight * data.y / 1000\n                });\n            });\n        }\n    }\n    responsivity(oldScreen, newScreen) {\n        console.log(oldScreen);\n        console.log(newScreen);\n        this.modules.Composite.allBodies(this.objects.engine.world).forEach(function(body) {\n            // Update dimensions\n            var scaleX = newScreen.w / oldScreen.w;\n            var scaleY = newScreen.h / oldScreen.h;\n            console.log(body);\n            matter_js__WEBPACK_IMPORTED_MODULE_0___default().Body.scale(body, scaleX, scaleY);\n            // Update position\n            var newPosition = {\n                x: body.position.x * scaleX,\n                y: body.position.y * scaleY\n            };\n            matter_js__WEBPACK_IMPORTED_MODULE_0___default().Body.setPosition(body, newPosition);\n        });\n        // for (var i = 0; i < this.objects.engine.world.bodies.length; i++) {\n        //     var body = this.objects.engine.world.bodies[i];\n        //     console.log(body.width)\n        //     this.modules.Body.setPosition(body, {\n        //         x: body.position.x * (newScreen.w / oldScreen.w),\n        //         y: body.position.y * (newScreen.h / oldScreen.h)\n        //     });\n        // }\n        this.objects.render.canvas.width = newScreen.w;\n        this.objects.render.canvas.height = newScreen.h;\n    }\n    constructor(roomId){\n        this.objects = {\n            engine: null,\n            render: null,\n            runner: null,\n            mouse: null,\n            mouseConstraint: null\n        };\n        this.paddleSide = \"\";\n        this.matterContainer = document.querySelector(\"#matter-Container\");\n        this.socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"http://localhost:3008\");\n        this.obj = this.saveMeasurements(this.matterContainer);\n        this.socket.emit(\"joinRoom\", {\n            roomId: roomId,\n            obj: this.obj\n        });\n        this.modules = {\n            Engine: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Engine),\n            Render: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Render),\n            Runner: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Runner),\n            Bodies: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Bodies),\n            Body: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Body),\n            Composite: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Composite),\n            Mouse: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().Mouse),\n            MouseConstraint: (matter_js__WEBPACK_IMPORTED_MODULE_0___default().MouseConstraint)\n        };\n        this.test = this.modules.Bodies.circle(400, 240, 20, {\n            isStatic: true\n        });\n        this.bodies = {\n            ball: this.modules.Bodies.circle(500, 500, 20, {\n                label: \"\"\n            }),\n            leftPaddle: this.modules.Bodies.rectangle(this.obj.leftPaddle.x, this.obj.leftPaddle.y, this.obj.leftPaddle.width, this.obj.leftPaddle.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"green\"\n                }\n            }),\n            rightPaddle: this.modules.Bodies.rectangle(this.obj.rightPaddle.x, this.obj.rightPaddle.y, this.obj.rightPaddle.width, this.obj.rightPaddle.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"red\"\n                }\n            }),\n            myPaddle: this.modules.Bodies.rectangle(0, 0, 0, 0, {\n                isStatic: true\n            }),\n            othersPaddle: this.modules.Bodies.rectangle(0, 0, 0, 0, {\n                isStatic: true\n            }),\n            roof: this.modules.Bodies.rectangle(this.obj.wallTop.x, this.obj.wallTop.y, this.obj.wallTop.width, this.obj.wallTop.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"blue\"\n                }\n            }),\n            ground: this.modules.Bodies.rectangle(this.obj.wallBottom.x, this.obj.wallBottom.y, this.obj.wallBottom.width, this.obj.wallBottom.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"red\"\n                }\n            }),\n            wall: this.modules.Bodies.rectangle(this.obj.wallRight.x, this.obj.wallRight.y, this.obj.wallRight.width, this.obj.wallRight.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"green\"\n                }\n            }),\n            wallLeft: this.modules.Bodies.rectangle(this.obj.wallLeft.x, this.obj.wallLeft.y, this.obj.wallLeft.width, this.obj.wallLeft.height, {\n                isStatic: true,\n                render: {\n                    fillStyle: \"green\"\n                }\n            })\n        };\n        this.socket.on(\"paddleAssigned\", (data)=>{\n            console.log(\"recieved paddle\", data);\n            this.paddleSide = data;\n            if (this.paddleSide == \"left\") {\n                this.bodies.myPaddle = this.bodies.leftPaddle;\n                this.bodies.othersPaddle = this.bodies.rightPaddle;\n            } else {\n                this.bodies.myPaddle = this.bodies.rightPaddle;\n                this.bodies.othersPaddle = this.bodies.leftPaddle;\n            }\n            this.updateOtherPaddle();\n        });\n    }\n} // createModules() {\n //     const matterContainer = document.querySelector(\"#matter-Container\") as HTMLElement\n //     if (matterContainer){\n //         this.objects.engine = this.modules.Engine.create();\n //         this.objects.render = this.modules.Render.create({\n //             element: matterContainer,\n //             engine: this.objects.engine,\n //             options: {\n //                 background: \"transparent\",\n //                 wireframes: true,\n //                 showAngleIndicator: true,\n //                 width: matterContainer.clientWidth,\n //                 height: matterContainer.clientHeight,\n //             }\n //         }),\n //         this.objects.runner = this.modules.Runner.create(),\n //         this.objects.mouse = this.modules.Mouse.create(this.objects.render.canvas),\n //         this.objects.mouseConstraint = this.modules.MouseConstraint.create(this.objects.engine, {\n //             mouse: this.objects.mouse,\n //             constraint: {\n //                 stiffness: 0.2,\n //                 render: {\n //                     visible: false\n //                 }\n //             }\n //         })\n //     }\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/matterTools.ts\n"));

/***/ })

});